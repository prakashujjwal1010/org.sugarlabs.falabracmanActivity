#!/usr/bin/python3

# sugarapp-gen-mimetypes
#
# Copyright 2019 Martin Abente Lahaye
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.

import sys
import os
import argparse
import configparser

from xml.etree import cElementTree as ET
from xml.dom import minidom


def generate_mimetypes(info_path, mimetypes_path):
    info = configparser.ConfigParser()
    info.read(os.path.join(info_path))

    required_fields = [
        'bundle_id',
        'name']
    for name in required_fields:
        if not info.has_option('Activity', name):
            print('[ERROR] Activity needs {} metadata for mimetypes'.format(name))
            sys.exit(-1)

    name = info.get('Activity', 'name')
    sanitized_name = name.replace(' ', '').lower()
    mime_info = ET.Element(
        'mime-info',
        xmlns='http://www.freedesktop.org/standards/shared-mime-info')
    mime_type = ET.SubElement(
        mime_info,
        'mime-type',
        type="application/x-{}-activity".format(sanitized_name))
    ET.SubElement(mime_type, 'comment', attrib={'xml:lang': 'en'}).text = name
    ET.SubElement(mime_type, 'glob', pattern='*.{}'.format(sanitized_name))

    xml_data = minidom.parseString(
        ET.tostring(mime_info)).toprettyxml(
        indent='    ')
    with open(mimetypes_path, 'w') as xml_file:
        xml_file.write(xml_data)


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument(
        'info',
        type=str,
        help='path to activity.info to read from')
    parser.add_argument(
        'mimetypes',
        type=str,
        help='path the mimetypes.xml to be written')
    args = parser.parse_args()
    generate_mimetypes(args.info, args.mimetypes)
